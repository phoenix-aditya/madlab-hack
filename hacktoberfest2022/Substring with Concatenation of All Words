vector<int> findSubstring(string s, vector<string>& words) {
        vector<int> ans;
        int n=words.size();
        int m=words[0].size();
        unordered_map<string,int> f;
        int t=m*n;
        if(s.size()<t)
            return ans;
        
        for(auto it:words)
            f[it]++;
        
        for(int i=0;i<=s.size()-t;i++)
        {
            unordered_map<string,int> mp=f;
            int j=0;
            for(;j<s.size();j++)
            {
                
                string temp=s.substr(i+j*m,m);
                if(mp[temp]==0)
                    break;
                else
                    mp[temp]--;
            }
            if(j==n)
                ans.push_back(i);
            
        }
        return ans;
   }
